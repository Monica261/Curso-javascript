Curso js

#################################################################################################

Variáveis -> são endereços de memória que nos possibilitam
armazenar dados ou informações de forma temporária

*Tipos de variáveis -> int, float, string, boolean ...

*Regras para declaração de variáveis em js->
-não podem ser iniciadas com números, apenas com letras ou '-'.
-não pode ser utilizado caracteres especiais como 'ç', '^', '~'.
-não podem ser iguais as palavras reservadas da linguagem.

*Utilize a palavra reservada 'var' antes da declaração da variável.

*Case sensitive(js faz diferenciação entre palavras maiúsculas e minusculas)
-exemplos:
var curso, var Curso, var CURSO, var _AulaVariaveis, v

* = -> sinal de atribuição
* o tipo da variável é definida no processo de atribuição -> =
* atraves do Alert(''); ou document.write(); eu consigo exibir o valor de uma variavel no navegador
* posso exibir o valor da variável no console com o console.log('');
* o comando ctrl+shift+i abrem o console no seu navegador

EXEMPLO:

<head>
	<title>variaveis</title>
	<meta charset="utf-8">

	< type="text/java">

		//String 
		var texto = 'Aula js';

		//float
		var numeroFracionado = 10.7;

		//int
		var numeroInteiro = 10;

		//boolean
		var boleano = true;//armazenam somente true ou false

		document.write(numeroInteiro);
	</>
</head>


##########################################################################################################

Concatenação -> significa juntar valores, juntar informações em uma única string, unificar conjuntos de informações

*em js podemos utilizar uma função chamada prompt para capturar a entrada de um usuario
*na concatenação podemos utilizar vários tipos de variaveis como int, string, float...
*operações de concaenação são realizadas atraves do +

EXEMPLO:

<head>
	<title>Concatenação</title>
	<meta charset="utf-8">

	< type="text/java">

		//String 
		var texto = 'Olá ';
		var texto2 = prompt('Digite o seu nome ');

		document.write(texto + texto2);


	</>
</head>

#########################################################################################################

Array Básico -> São listas ordenadas, ela tenta imitar uma lista do mundo real

*permite o armazenamento em uma única variável

EXEMPLO:


<head>
  <title>Array Básico</title>
  <meta charset="utf-8">

  < type="text/java">

    var frutas = ['banana','maça','uva','manga']

    alert(frutas[3]);

  </>
</head> 

#####################################################################################################

Arrays Multidimencionais ou Bidimencionais -> São arrays de arrays, nós poderemos acessar através de uma variável e um
índice, o outro Array

EXEMPLO:

<head>
  <title>Array Multidimencional</title>
  <meta charset="utf-8">

  < type="text/java">
    
    var lista_coisas = Array();

    //índice
    lista_coisas ['frutas'] = Array('Maçã','Manga','Limão');
    lista_coisas ['pessoas'] = Array('Maria','Pedro','Carla');


    alert(lista_coisas['frutas'][2] + lista_coisas['pessoas'][0]);
  </>
</head>



############################################################################################################

If  e Else -> é uma estrutura de controle, permite definir em uma determinada condição qual o fluxo que a aplicação vai tomar

*Simples Exemplo:

 if (condição) {
      //bloco de código que será executado caso a condição for verdadeira
    }else{
      //bloco de código que será executado caso a condição for falsa
    }

*Podemos utilizar somente o If caso a condição for satisfeita:

  if (condição) {
      //bloco de código que será executado caso a condição for verdadeira
    }

EXEMPLOS:

<head>
  <title>Nota do aluno</title>
  <meta charset="utf-8">

  < type="text/java">
    var nota = 6;
    var aluno = prompt('qual a nota do aluno?');

    if (nota < aluno | nota == aluno) {
      document.write('aprovado');
    }else{
      document.write('reprovado');
    }
  </>
</head>

*************************************************************

<head>
  <title>Aprovação</title>
  <meta charset="utf-8">

  < type="text/java">
    var idade = 21;
    var pessoa = prompt('Qual a sua idade?');

    if (idade < pessoa || idade == pessoa) {
      document.write('você é maior de idade');
    }else{
      document.write('você é menor de idade');
    }
  </>
</head>

*************************************************************
< type="text/java">
    // ==
    if (2 == 2) {
      document.write('true');
    }else{
      document.write('false');
    }
  </>

************************************************************

< type="text/java">
    // === o identico verifica não só o valor mas tambem o tipo, esse exemplo exibe falso pq '2' é tipo string
    if (2 === '2') {
      document.write('true');
    }else{
      document.write('false');
    }
  </>

************************************************************



*usei nota == aluno, para caso o aluno tire 6, ser aprovado tambem, já que somente com nota < aluno se o aluno tirar 6 
seria reprovado

########################################################################################################

Operadores Lógicos -> são operadores que nos permitem juntar operações de comparação

EXEMPLOS:

    // && operador e
    // || operador ou
    // !  operador de negação


    //&& precisa que mais de uma condição seja verdadeira para exibir verdadeiro
    if (2 == 2 && 5 == 5 && 10 > 6) {
      document.write('true');
    }else{
      document.write('false');
    }
***********************************************************************************
    // || precisa que pelo menos um seja verdadeiro
    if (2 == 2 || 10 == 5 || 10 < 6) {
      document.write('true');
    }else{
      document.write('false');
    }

**********************************************************************************    
    // ! inverte o resultado obtido em uma operação de comparação
    if (!(2 == 8)) {
      document.write('true');
    }else{
      document.write('false');
    }
**********************************************************************************

    var notas = prompt('qual a nota do aluno?');
    var faltas = prompt('quantas faltas o aluno tem?')

    var notas = 6;
    var faltas_limite = 15;

    if (notas >= faltas && faltas <= faltas_limite ) {
      document.write('aprovado');
    }else{
      document.write('reprovado');
    }

**********************************************************************************
const nome = prompt('Nome?');
const idade = prompt('Qual a sua idade?');

if(idade >= 18){
   document.write(`Bem vindo ao site ${nome}!`);
}else{
   document.write('Não pode!');
}
###########################################################################################################################

Switch -> é um condicional, executa um determinado bloco de código em decremento de outro, ele é escrito de forma diferente
do if e else, ele é restrito é só conseguimos fazer operações de comparação, ele organiza o nosso código de forma intuitiva

EXEMPLOS:

< type="text/java">

    var opcao = 1;


    // ==
    switch(opcao){
      case 1:
      alert('Olá');
      break;

      case 2:
      document.write('Mônica');
      break;

      case 3:
      console.log('Olá mundo');
      break;

      default:
      alert('nenhuma opção!');
    }

  </>
***************************************************

 < type="text/java">

    var opcao = 1;
    var nome = prompt('Qua o seu nome?');


    // ==
    switch(opcao){
      case 1:
      document.write('Olá');
      break;

      case 2:
      document.write('Mônica');
      break;

      case 3:
      console.log('Olá mundo');
      break;

      default:
      alert('nenhuma opção!');
    }

    document.write(nome);

  </>

##############################################################################################################

Slipce -> pode tanto add quanto remover

//add
const comidas = ['Pizza', 'Hamburguer', 'Açai', 'Pão de alho'];
comidas.splice(1,0, 'Chocolate', 'Lentilha');
console.log(comidas);

//remover
comidas.splice(2,1);
console.log(comidas);

##############################################################################################################

Function -> Estudar mais!

EXEMPLOS:

< type="text/java">
	const suco = prompt('suco favorito?');
	
	function sabor(suco){
		if (suco === 'laranja') {
			return 'true';
		}else{
			return 'false';
		}
	}

	console.log(sabor(suco));
//////////////////////////////////////////////////////////

const idade = prompt('Qual a sua idade');

function adulto(idade){
	if (idade >= 18) {
		return 'Você é maior de idade';
	}else{
		return 'pirralho!';
	}
}

document.write(adulto(idade));

##############################################################################################################

ForEach -> Estudar mais!

EXEMPLOS:

const pedidos = [
   'coca',
   'lanche',
   'batata'
];

const enviaPedido = (pedidos) =>{
   console.log(`Pedido para ${pedidos} enviado com sucesso!`);
}

pedidos.forEach((item) => {
   enviaPedido(item);
});


//EXERCICIOS:

// Mostre no console cada parágrado do site
const paragrafosCada = document.querySelectorAll('p');

paragrafosCada.forEach((item)=>{
   console.log(item);
});

// Mostre o texto dos parágrafos no console
const paragrafosSite = document.querySelectorAll('p');

paragrafosSite.forEach((item)=>{
   console.log(item.innerText);
});


// Como corrigir os erros abaixo:
const imgs = document.querySelectorAll('img');

imgs.forEach((item, index) => {
  console.log(item, index);
});

let i = 0;
imgs.forEach(() => {
    console.log(i++);
});

imgs.forEach(() => i++);



##############################################################################################################

Dimensões e Distâncias -> Estudar mais!

const selecao = document.querySelector('.animais-lista');
const height = selecao.scrollHeight;
const animaisTop = selecao.offsetTop;
console.log(animaisTop);

/////////////////////////////////////

const raposaH2 = document.querySelector('h2');
const h2left = raposaH2.offsetLeft;
console.log(h2left);

/////////////////////////////////////

const rect = raposaH2.getBoundingClientRect();
console.log(rect.top);

if(rect.top < 0){
    console.log('passou do elemento');
}

////////////////////////////////////

console.log(
    window.innerWidth,
    window.innerHeight,
    window.outerWidth,
    window.outerHeight,
    window.pageYOffset,
);

//Verificar tamanho da tela do usuario
if (window.innerWidth < 600) {
    console.log('tela menor que 600px');
}

////////////////////////////////////////

//Verificar o tamanho da tela do usuario, de forma correta
const small = window.matchMedia('(max-width: 600px)').matches;
if(small){
    console.log('Usuario mobile');
}else{
    console.log('Usuario desktop');
}
console.log(small);


/////////////////////////////////////////

//EXERCICIOS

// Verifique a distância da primeira imagem
// em relação ao topo da página
const imagem = document.querySelector('img');
const distancia = imagem.offsetTop;
console.log(distancia);

// Retorne a soma da largura de todas as imagens
function SomaImagens() {
    const imagens = document.querySelectorAll('img');
    let soma = 0;
    imagens.forEach((imgs)=>{
    soma = soma + imgs.offsetWidth;
});
console.log(soma);
}

window.onload = function(){
    SomaImagens();
}

// Verifique se os links da página possuem
// o mínimo recomendado para telas utilizadas
// com o dedo. (48px/48px de acordo com o google)

const links = document.querySelectorAll('a');

links.forEach((link)=>{
    const linkWidht = link.offsetWidth;
    const linkHeight = link.offsetHeight;

    if(linkWidht >= 48 && linkHeight >= 48){
        console.log(link, 'Possui boa acessibilidade');
    }else{
        console.log(link, 'Não Possui acessibilidade');
    }
})

// Se o browser for menor que 720px,
// adicione a classe menu-mobile ao menu

const browser = window.matchMedia('(max-width: 720px)').matches;
const menu = document.querySelector('.menu');

if(browser < 720){
    console.log(menu.classList.add('menu-mobile'));
}

##############################################################################################################

Eventos -> Eventos são ações ou ocorrências que acontecem no sistema que estamos desenvolvendo, no qual este te alerta sobre essas ações para que você possa responder de alguma forma, se desejado.

*CALLBACK
É boa prática separar a função de callback do addEventListener, ou seja, declarar uma função ao invés de passar diretamente uma função anônima

/////////////////////////////////////////

const imagem = document.querySelector('img');

function callback(){
   console.log('clicou!');
}

imagem.addEventListener('click', callback);

/////////////////////////////////////////
Eventos do teclado -> keydown, keyup e keypress

*com essa função eu consigo saber atraves do console, qual letra o usuario clicou

document.addEventListener('keypress', function(event){
	console.log(event.key)
})

##############################################################################################################

//exemplo pra estudar
const corpo = document.querySelector('#animais');
const rodape = document.querySelector('.contato');

function rolou(){
   console.log('Esse é o body');
   document.body.style.backgroundColor = 'blue';
}

function ultimo(){
   console.log('Esse é o footer');
   document.body.style.backgroundColor = 'pink';
}

corpo.addEventListener('click', rolou);
rodape.addEventListener('click', ultimo);
console.log(this);
console.log(this);

//////////////////////////////////////////////
//forEach
const grid = document.querySelectorAll('.grid-section');

grid.forEach((item, index)=>{
   console.log(`Exibindo ${item} e ${index} de cada vez`);
});

///////////////////////////////////////////////
//Arrow funtion
const comidas = [
   'Hamburguer',
   'Batata',
   'Bebida'
];

console.log(comidas.map(comidas=> comidas.length));

////////////////////////////////////////////////

##############################################################################################################

Eventos -> 

https://www.origamid.com/slide/java-completo-es6/#/0307-eventos/1

const img = document.querySelector('img');

function callback(event){
    console.log(event);
}

//img.addEventListener('click', callback);
///////////////////////////////////////////////////

const animaisLista = document.querySelector('.animais-lista');

function callbackLista(event){
    //console.log(event.currentTarget);//ele me mostra cada linha
    //console.log(event.target);//mostra exatamente onde clicou(nas imgs)
    //console.log(event.type);//mostra o tipo do evento
    console.log(event.path);
}

animaisLista.addEventListener('click', callbackLista);

/////////////////////////////////////////////////////

//event.preventDefault() -> previne o comportamento padrão do evento no browser

const linkexterno = document.querySelector('a[href^="http"]');
//function handleLink(event){
//    event.preventDefault();
//    console.log(event);
//}

//linkexterno.addEventListener('click', handleLink);
/////////////////////////////////////////////////////

//this -> faz referencia ao elemento adicionado

function handleLink(event){
    event.preventDefault();
    console.log(this.getAttribute('href'));
    console.log(event.currentTarget);//this é a mesma coisa que o currentTarget
}

linkexterno.addEventListener('click', handleLink);
/////////////////////////////////////////////////////

//Existem diferentes eventos que podem ser adicionados tanto ao document
//quanto ao window

const h1 = document.querySelector('h1');
function handleclick(event){
    console.log(event.type, event);
}

//h1.addEventListener('click', handleclick);
//h1.addEventListener('mouseenter', handleclick);
//h1.addEventListener('mousemove', handleclick);

//Evento com objeto window:
//window.addEventListener('scroll', handleclick);
//window.addEventListener('resize', handleclick);
//window.addEventListener('keydown', handleclick);

/////////////////////////////////////////////////////
//keyboard -> 

function handleKeyBoard(event){
    if(event.key === 'm'){
        document.body.classList.toggle('monica');
    }else if(event.key === 'a'){
        document.body.classList.toggle('nathalia') && alert('Efeito blur acionado');
    }
}

window.addEventListener('keydown', handleKeyBoard);
/////////////////////////////////////////////////////
//forEach -> seleciona todas as imgs uma de cada vez

const imgs = document.querySelectorAll('img');

function handleImg(event){
    console.log(event.target.getAttribute('src'));
}

imgs.forEach((img)=>{
    img.addEventListener('click', handleImg);
});

########################################################################################################

loop -> estudar mais!

exemplo:

for(var i = 0; i < 4; i++){console.log(document.body.style.backgroundColor = "red")};

########################################################################################################

estudar esse tipo de condição:

<span>CONCLUÍDO - {done ? 'concluído':'falso'}</span>

########################################################################################################

Atribuição ternuario -> estudar mais!:

const premium = prompt('Qual sua pontuação?'); const condicao = premium  >= 20 ? 'cliente premium' : 'Cliente não premium'; console.log(condicao);

########################################################################################################

Reforçando Promise: https://js.do/code/promiseorigamid

Reforçando Classes: https://js.do/code/classesjs

Reforçando Async e Await: https://js.do/code/reforcandoasyncawait

Reforçando classe: https://js.do/code/reforcandoclassesjs


Estudar como consumir API do Rick and Morty com Fetch e Promisses:
https://youtu.be/kS1p5_OXpLc
https://js.do/code/rickandmortyapi

Consumindo API Covid 19: https://js.do/code/apicovid19